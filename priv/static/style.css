/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Remove default margin */
body,
h1,
h2,
h3,
h4,
p,
figure,
blockquote,
dl,
dd {
  margin: 0;
}

/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul[role='list'],
ol[role='list'] {
  list-style: none;
}

/* Set core root defaults */
html:focus-within {
  scroll-behavior: smooth;
}

/* Set core body defaults */
body {
  min-height: 100vh;
  text-rendering: optimizeSpeed;
  line-height: 1.5;
}

/* A elements that don't have a class get default styles */
a:not([class]) {
  text-decoration-skip-ink: auto;
}

/* Make images easier to work with */
img,
picture {
  max-width: 100%;
  display: block;
}

/* Inherit fonts for inputs and buttons */
input,
button,
textarea,
select {
  font: inherit;
}

/* Remove all animations, transitions and smooth scroll for people that prefer not to see them */
@media (prefers-reduced-motion: reduce) {
  html:focus-within {
   scroll-behavior: auto;
  }
  
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}



/* Custom */

:root {
  --clickable-color: #03584f;
}

@font-face {
  font-family: FiraSansRegular;
  src: url('/fonts/FiraSans-Regular.woff2') format('woff2');
}

a {
  color: var(--clickable-color);
}

body {
  display: flex;
  flex-flow: row wrap;
  justify-content: center;

  color: rgb(41,41,41);
  font-family: 'FiraSansRegular', sans-serif;
  font-size: 18px;
}

.wrapper {
  display: flex;
  flex-flow: column;
  width: min(100ch, 95%);
  margin: 10vh 5vw;
  line-height: 1.8em;
}

ul {
  padding-left: 0;
}

nav li {
  display: inline-block;
}

nav li + li:before {
  content: " | ";
}

.flow > * + * {
  margin-top: 1em;
}

img {
  max-width: 100%;
}

pre {
  font-size: min(1em, calc(100vw/55));
  background: #2f1e2e;
  color: #c9d1d9;
  padding: 1em;
  line-height: 1.45em;
}

.tag a {
  text-decoration: none;
  font-size: 0.7em;
  padding-right: 1em;
}

.post-head {
  line-height: 1.6em;
}



/* Syntax */

.makeup .hll {background-color: #4f424c}
.makeup {color: #e7e9db; background-color: #2f1e2e}.makeup .unselectable {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.makeup .bp {color: #e7e9db; } /* :name_builtin_pseudo */
.makeup .c {color: #776e71; } /* :comment */
.makeup .c1 {color: #776e71; } /* :comment_single */
.makeup .ch {color: #776e71; } /* :comment_hashbang */
.makeup .cm {color: #776e71; } /* :comment_multiline */
.makeup .cp {color: #776e71; } /* :comment_preproc */
.makeup .cpf {color: #776e71; } /* :comment_preproc_file */
.makeup .cs {color: #776e71; } /* :comment_special */
.makeup .dl {color: #48b685; } /* :string_delimiter */
.makeup .err {color: #ef6155; } /* :error */
.makeup .fm {color: #06b6ef; } /* :name_function_magic */
.makeup .gd {color: #ef6155; } /* :generic_deleted */
.makeup .ge {font-style: italic; } /* :generic_emph */
.makeup .gh {color: #e7e9db; font-weight: bold; } /* :generic_heading */
.makeup .gi {color: #48b685; } /* :generic_inserted */
.makeup .gp {color: #776e71; font-weight: bold; } /* :generic_prompt */
.makeup .gs {font-weight: bold; } /* :generic_strong */
.makeup .gu {color: #5bc4bf; font-weight: bold; } /* :generic_subheading */
.makeup .il {color: #f99b15; } /* :number_integer_long */
.makeup .k {color: #815ba4; } /* :keyword */
.makeup .kc {color: #815ba4; } /* :keyword_constant */
.makeup .kd {color: #815ba4; } /* :keyword_declaration */
.makeup .kn {color: #5bc4bf; } /* :keyword_namespace */
.makeup .kp {color: #815ba4; } /* :keyword_pseudo */
.makeup .kr {color: #815ba4; } /* :keyword_reserved */
.makeup .kt {color: #fec418; } /* :keyword_type */
.makeup .l {color: #f99b15; } /* :literal */
.makeup .ld {color: #f99b15; } /* :literal_date */
.makeup .m {color: #f99b15; } /* :number */
.makeup .mb {color: #f99b15; } /* :number_bin */
.makeup .mf {color: #f99b15; } /* :number_float */
.makeup .mh {color: #f99b15; } /* :number_hex */
.makeup .mi {color: #f99b15; } /* :number_integer */
.makeup .mo {color: #f99b15; } /* :number_oct */
.makeup .n {color: #e7e9db; } /* :name */
.makeup .na {color: #06b6ef; } /* :name_attribute */
.makeup .nb {color: #e7e9db; } /* :name_builtin */
.makeup .nc {color: #fec418; } /* :name_class */
.makeup .nd {color: #5bc4bf; } /* :name_decorator */
.makeup .ne {color: #ef6155; } /* :name_exception */
.makeup .nf {color: #06b6ef; } /* :name_function */
.makeup .ni {color: #e7e9db; } /* :name_entity */
.makeup .nl {color: #e7e9db; } /* :name_label */
.makeup .nn {color: #fec418; } /* :name_namespace */
.makeup .no {color: #ef6155; } /* :name_constant */
.makeup .nt {color: #5bc4bf; } /* :name_tag */
.makeup .nv {color: #ef6155; } /* :name_variable */
.makeup .nx {color: #06b6ef; } /* :name_other */
.makeup .o {color: #5bc4bf; } /* :operator */
.makeup .ow {color: #5bc4bf; } /* :operator_word */
.makeup .p {color: #e7e9db; } /* :punctuation */
.makeup .py {color: #e7e9db; } /* :name_property */
.makeup .s {color: #48b685; } /* :string */
.makeup .s1 {color: #48b685; } /* :string_single */
.makeup .s2 {color: #48b685; } /* :string_double */
.makeup .sa {color: #48b685; } /* :string_affix */
.makeup .sb {color: #48b685; } /* :string_backtick */
.makeup .sc {color: #e7e9db; } /* :string_char */
.makeup .sd {color: #776e71; } /* :string_doc */
.makeup .se {color: #f99b15; } /* :string_escape */
.makeup .sh {color: #48b685; } /* :string_heredoc */
.makeup .si {color: #f99b15; } /* :string_interpol */
.makeup .sr {color: #48b685; } /* :string_regex */
.makeup .ss {color: #48b685; } /* :string_symbol */
.makeup .sx {color: #48b685; } /* :string_other */
.makeup .sx {color: #48b685; } /* :string_sigil */
.makeup .vc {color: #ef6155; } /* :name_variable_class */
.makeup .vg {color: #ef6155; } /* :name_variable_global */
.makeup .vi {color: #ef6155; } /* :name_variable_instance */
.makeup .vm {color: #ef6155; } /* :name_variable_magic */
